{"version":3,"file":"main.fa2c7c9ef007bb3a7740.js","mappings":";sQACA,IAAAA,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAA,OAAAC,EAAA,MAAAD,EAAA,GAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAA4B,MAAApB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAA,SAAAP,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAa,MAAA5B,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAmB,IAAA,UAAAC,IAAA,CAAA9B,EAAAY,OAAAmB,eAAA,IAAAvB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,EAAA,yBAAAH,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA8B,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAA,cAAAmB,GAAAhB,EAAAgB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAApB,EAAAgB,EAAAzB,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,EAAA,yBAAAW,EAAAH,EAAA,oDAAAwB,EAAA,kBAAAC,EAAA7B,EAAA8B,EAAA,cAAAvB,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA0B,eAAA,IAAA/B,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAAK,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAA,SAAAF,GAAA,YAAAwC,QAAAtC,EAAAE,EAAAJ,EAAA,GAAAE,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAA2B,MAAAzB,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,GAAAE,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAA2C,EAAAxC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAqB,KAAA,OAAAzB,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAiC,QAAAC,QAAAlC,GAAAmC,KAAA7C,EAAAI,EAAA,UAAA0C,EAAA5C,GAAA,sBAAAH,EAAA,KAAAD,EAAAiD,UAAA,WAAAJ,QAAA,SAAA3C,EAAAI,GAAA,IAAAe,EAAAjB,EAAA8C,MAAAjD,EAAAD,GAAA,SAAAmD,EAAA/C,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,OAAAhD,EAAA,UAAAgD,EAAAhD,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,QAAAhD,EAAA,CAAA+C,OAAA,eAAAE,EAAArD,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAsB,OAAAvB,IAAA,KAAAK,EAAAJ,EAAAD,GAAAK,EAAAmC,WAAAnC,EAAAmC,aAAA,EAAAnC,EAAAoC,cAAA,YAAApC,IAAAA,EAAAqC,UAAA,GAAA9B,OAAA0B,eAAAvC,EAAAsD,EAAAhD,EAAAiD,KAAAjD,EAAA,WAAAgD,EAAArD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAAuD,EAAAvD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAE,OAAAsD,aAAA,YAAAzD,EAAA,KAAAQ,EAAAR,EAAA2B,KAAA1B,EAAAC,UAAA,aAAAsD,EAAAhD,GAAA,OAAAA,EAAA,UAAAkB,UAAA,uDAAAgC,OAAAzD,EAAA,CAAA0D,CAAA1D,GAAA,gBAAAuD,EAAAhD,GAAAA,EAAAA,EAAA,GADsB,IAEhBoD,EAAmB,WAKpB,OANL5D,EAEI,SAAA4D,KAFJ,SAAAvC,EAAAjB,GAAA,KAAAiB,aAAAjB,GAAA,UAAAsB,UAAA,qCAEkBmC,CAAA,KAAAD,GACVE,KAAKC,iBAAmB,KACxBD,KAAKE,mBAAqB,KAC1BF,KAAKG,MACT,EANJ/D,EAMK,EAAAqD,IAAA,OAAA1B,OAAAqC,EAAAlB,EAAAZ,IAAAE,EAED,SAAA6B,IAAA,OAAA/B,IAAAC,EAAA,SAAA+B,GAAA,cAAAA,EAAAhE,GAAA,cAAAgE,EAAAhE,EAAA,EACU0D,KAAKO,qBAAoB,OAC/BP,KAAKQ,sBACLR,KAAKS,WACLT,KAAKU,eAAe,cAAAJ,EAAA/C,EAAA,KAAA8C,EAAA,SACvB,WALS,OAAAD,EAAAhB,MAAC,KAADD,UAAA,KAAAM,IAAA,qBAAA1B,OAAA4C,EAAAzB,EAAAZ,IAAAE,EAOV,SAAAoC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAzC,IAAAC,EAAA,SAAAyC,GAAA,cAAAA,EAAA7D,EAAA6D,EAAA1E,GAAA,cAAA0E,EAAA7D,EAAA,EAAA6D,EAAA1E,EAAA,EAGoC2E,MAAM,2DAA0D,OAAzE,OAAbJ,EAAaG,EAAA1D,EAAA0D,EAAA1E,EAAG,EACQuE,EAAcK,OAAM,OAA7B,OAArBlB,KAAKC,iBAAgBe,EAAA1D,EAAA0D,EAAA1E,EAAG,EAGE2E,MAAM,4DAA2D,OAA1E,OAAXH,EAAWE,EAAA1D,EAAA0D,EAAA1E,EAAG,EACYwE,EAAYI,OAAM,OAAlDlB,KAAKE,mBAAkBc,EAAA1D,EAAA0D,EAAA1E,EAAG,EAAH,aAAA0E,EAAA7D,EAAG,EAAH4D,EAAAC,EAAA1D,EAGvB0C,KAAKmB,iBAAiB,iCAAmCJ,EAAMK,QAAS,SAAS,cAAAJ,EAAAzD,EAAA,KAAAqD,EAAA,iBAExF,WAbuB,OAAAD,EAAAvB,MAAC,KAADD,UAAA,KAAAM,IAAA,sBAAA1B,MAexB,WAAsB,IAAAsD,EAAA,KAElBC,SAASC,eAAe,kBAAkBC,iBAAiB,QAAS,WAChEH,EAAKI,gBACT,GAGAH,SAASC,eAAe,oBAAoBC,iBAAiB,QAAS,WAClEH,EAAKK,kBACT,GAGAJ,SAASC,eAAe,WAAWC,iBAAiB,QAAS,WACzDH,EAAKM,aACT,GAGAL,SAASC,eAAe,oBAAoBC,iBAAiB,QAAS,SAACtF,GACnEmF,EAAKO,cACT,GAGAN,SAASC,eAAe,WAAWC,iBAAiB,QAAS,WACzDH,EAAKQ,oBACT,EACJ,GAAC,CAAApC,IAAA,WAAA1B,MAED,WAAW,IAAA+D,EAAA,KAEH9B,KAAKC,kBAAoBD,KAAKC,iBAAiB8B,aAC/CT,SAASC,eAAe,cAAcxD,MAAQiC,KAAKC,iBAAiB8B,YAIpE/B,KAAKE,qBACLoB,SAASC,eAAe,WAAWxD,MAAQiC,KAAKE,mBAAmB8B,SAAW,IAG9EV,SAASC,eAAe,aAAaU,UAAY,GAG7CjC,KAAKE,mBAAmBgC,WAAaC,MAAMC,QAAQpC,KAAKE,mBAAmBgC,YAC3ElC,KAAKE,mBAAmBgC,UAAUG,QAAQ,SAAAC,GACtCR,EAAKH,YAAYW,EAAIC,KACzB,GAIJjB,SAASC,eAAe,oBAAoBxD,MAAQyE,KAAKC,UAAUzC,KAAKE,mBAAoB,KAAM,GAE1G,GAAC,CAAAT,IAAA,cAAA1B,MAED,WAAuB,IAAA2E,EAAA,KAAXH,EAAIpD,UAAAzB,OAAA,QAAAiF,IAAAxD,UAAA,GAAAA,UAAA,GAAG,GACTyD,EAAYtB,SAASC,eAAe,aACpCsB,EAAWvB,SAASwB,cAAc,OACxCD,EAASE,UAAY,YAErBF,EAASZ,UAAY,2CAAHe,OACcT,EAAI,uOAKpCM,EAASI,cAAc,eAAezB,iBAAiB,QAAS,WAC5DkB,EAAKb,oBACT,GAEAe,EAAUM,YAAYL,GACtB7C,KAAK6B,oBACT,GAAC,CAAApC,IAAA,qBAAA1B,MAED,WACI,IAAMiE,EAAUV,SAASC,eAAe,WAAWxD,OAAS,IACtDoF,EAAa7B,SAAS8B,iBAAiB,eAKvCC,EAAS,CACXrB,QAASA,EACTE,UANcC,MAAMmB,KAAKH,GACxBI,IAAI,SAAAC,GAAK,MAAK,CAAEjB,KAAMiB,EAAMzF,MAAO,GACnC0F,OAAO,SAAAnB,GAAG,MAAwB,KAApBA,EAAIC,KAAKmB,MAAa,IAOzCpC,SAASC,eAAe,oBAAoBxD,MAAQyE,KAAKC,UAAUY,EAAQ,KAAM,EACrF,GAAC,CAAA5D,IAAA,eAAA1B,MAED,WAAe,IAAA4F,EAAA,KACX,IACI,IAAMC,EAAWtC,SAASC,eAAe,oBAAoBxD,MACvDsF,EAASb,KAAKqB,MAAMD,GAG1BtC,SAASC,eAAe,WAAWxD,MAAQsF,EAAOrB,SAAW,IAG3CV,SAASC,eAAe,aAChCU,UAAY,GAElBoB,EAAOnB,WAAaC,MAAMC,QAAQiB,EAAOnB,YACzCmB,EAAOnB,UAAUG,QAAQ,SAAAC,GACrBqB,EAAKhC,YAAYW,EAAIC,MAAQ,GACjC,EAGR,CAAE,MAAOuB,GAELC,QAAQC,KAAK,0BAA2BF,EAAM1C,QAClD,CACJ,GAAC,CAAA3B,IAAA,iBAAA1B,OAAAkG,EAAA/E,EAAAZ,IAAAE,EAED,SAAA0F,IAAA,IAAAnC,EAAAsB,EAAAc,EAAA,OAAA7F,IAAAC,EAAA,SAAA6F,GAAA,cAAAA,EAAAjH,EAAAiH,EAAA9H,GAAA,OAC4E,GAAlEyF,EAAasC,SAAS/C,SAASC,eAAe,cAAcxD,SAE9DuG,MAAMvC,IAAeA,EAAa,KAAOA,EAAa,KAAK,CAAAqC,EAAA9H,EAAA,QAC8B,OAAzF0D,KAAKmB,iBAAiB,yDAA0D,SAASiD,EAAA7G,EAAA,UAIpD,OAAnC8F,EAAS,CAAEtB,WAAYA,GAAYqC,EAAAjH,EAAA,EAAAiH,EAAA9H,EAAA,EAGd2E,MAAM,0DAA2D,CACpFsD,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMjC,KAAKC,UAAUY,KACvB,OANY,IAAAe,EAAA9G,EAQDoH,GAAI,CAAFN,EAAA9H,EAAA,QACX0D,KAAKC,iBAAmBoD,EACxBrD,KAAKmB,iBAAiB,gDAAiD,WACvEnB,KAAKU,eAAe0D,EAAA9H,EAAA,qBAEd,IAAIqI,MAAM,gCAA+B,OAAAP,EAAA9H,EAAA,eAAA8H,EAAAjH,EAAA,EAAAgH,EAAAC,EAAA9G,EAGnD0C,KAAKmB,iBAAiB,6BAA+BgD,EAAM/C,QAAS,SAAS,cAAAgD,EAAA7G,EAAA,KAAA2G,EAAA,iBAEpF,WA7BmB,OAAAD,EAAA7E,MAAC,KAADD,UAAA,KAAAM,IAAA,mBAAA1B,OAAA6G,EAAA1F,EAAAZ,IAAAE,EA+BpB,SAAAqG,IAAA,IAAAjB,EAAAP,EAAAyB,EAAA,OAAAxG,IAAAC,EAAA,SAAAwG,GAAA,cAAAA,EAAA5H,EAAA4H,EAAAzI,GAAA,OAKQ,GALRyI,EAAA5H,EAAA,EAEcyG,EAAWtC,SAASC,eAAe,oBAAoBxD,OACvDsF,EAASb,KAAKqB,MAAMD,IAGd5B,QAAS,CAAF+C,EAAAzI,EAAA,cACT,IAAIqI,MAAM,uBAAsB,UAGrCtB,EAAOnB,WAAcC,MAAMC,QAAQiB,EAAOnB,WAAU,CAAA6C,EAAAzI,EAAA,cAC/C,IAAIqI,MAAM,+BAA8B,cAAAI,EAAAzI,EAAA,EAG3B2E,MAAM,2DAA4D,CACrFsD,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMjC,KAAKC,UAAUY,KACvB,OANY,IAAA0B,EAAAzH,EAQDoH,GAAI,CAAFK,EAAAzI,EAAA,QACX0D,KAAKE,mBAAqBmD,EAC1BrD,KAAKmB,iBAAiB,iDAAkD,WACxEnB,KAAKU,eAAeqE,EAAAzI,EAAA,qBAEd,IAAIqI,MAAM,gCAA+B,OAAAI,EAAAzI,EAAA,eAAAyI,EAAA5H,EAAA,EAAA2H,EAAAC,EAAAzH,EAGnD0C,KAAKmB,iBAAiB,8BAAgC2D,EAAM1D,QAAS,SAAS,cAAA2D,EAAAxH,EAAA,KAAAsH,EAAA,iBAErF,WAhCqB,OAAAD,EAAAxF,MAAC,KAADD,UAAA,KAAAM,IAAA,eAAA1B,MAkCtB,WACI,IAAMiH,EAAY1D,SAASC,eAAe,UACtC0D,EAAa,gCAoBjB,GAjBIjF,KAAKC,iBACLgF,GAAc,kGAAJjC,OAE8BhD,KAAKC,iBAAiB8B,WAAU,4HAKxEkD,GAAc,4NASdjF,KAAKE,oBAAsBF,KAAKE,mBAAmBgC,UAAW,CAC9D,IAAMgD,EAAYlF,KAAKE,mBAAmBgC,UAAUxE,OACpDuH,GAAc,oGAAJjC,OAEgCkC,EAAS,6NAAAlC,OAIfhD,KAAKE,mBAAmB8B,QAAO,sDAAAgB,OACjChD,KAAKE,mBAAmBgC,UAAUqB,IAAI,SAAA4B,GAAC,OAAIA,EAAE5C,IAAI,GAAE6C,KAAK,MAAK,yCAGnG,MACIH,GAAc,8NAQlBD,EAAU/C,UAAYgD,CAC1B,GAAC,CAAAxF,IAAA,mBAAA1B,MAED,SAAiBqD,GAA2B,IAAlBiE,EAAIlG,UAAAzB,OAAA,QAAAiF,IAAAxD,UAAA,GAAAA,UAAA,GAAG,UACvBmG,EAAehE,SAASC,eAAe,gBAC7C+D,EAAaC,YAAcnE,EAC3BkE,EAAavC,UAAY,gBAAHC,OAAmBqC,EAAI,SAE7CG,WAAW,WACPF,EAAaG,UAAUC,OAAO,OAClC,EAAG,IACP,IAnQJtJ,GAAAmD,EAAArD,EAAAU,UAAAR,GAAAW,OAAA0B,eAAAvC,EAAA,aAAA2C,UAAA,IAAA3C,EAAA,IAAAA,EAAAE,EA4IwBwI,EAFnBX,EAlIStD,EAFTP,CA6PA,CAlQoB,GAsQzBkB,SAASE,iBAAiB,mBAAoB,WAC1CmE,OAAOC,oBAAsB,IAAI9F,CACrC,E","sources":["webpack://signalk-data-connector/./src/webapp/index.js"],"sourcesContent":["import './styles.css';\r\n\r\nclass DataConnectorConfig {\r\n    constructor() {\r\n        this.deltaTimerConfig = null;\r\n        this.subscriptionConfig = null;\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        await this.loadConfigurations();\r\n        this.setupEventListeners();\r\n        this.updateUI();\r\n        this.updateStatus();\r\n    }\r\n\r\n    async loadConfigurations() {\r\n        try {\r\n            // Load delta timer configuration\r\n            const deltaResponse = await fetch('/plugins/signalk-data-connector/config/delta_timer.json');\r\n            this.deltaTimerConfig = await deltaResponse.json();\r\n\r\n            // Load subscription configuration\r\n            const subResponse = await fetch('/plugins/signalk-data-connector/config/subscription.json');\r\n            this.subscriptionConfig = await subResponse.json();\r\n\r\n        } catch (error) {\r\n            this.showNotification('Error loading configurations: ' + error.message, 'error');\r\n        }\r\n    }\r\n\r\n    setupEventListeners() {\r\n        // Delta timer save button\r\n        document.getElementById('saveDeltaTimer').addEventListener('click', () => {\r\n            this.saveDeltaTimer();\r\n        });\r\n\r\n        // Subscription save button\r\n        document.getElementById('saveSubscription').addEventListener('click', () => {\r\n            this.saveSubscription();\r\n        });\r\n\r\n        // Add path button\r\n        document.getElementById('addPath').addEventListener('click', () => {\r\n            this.addPathItem();\r\n        });\r\n\r\n        // JSON editor sync\r\n        document.getElementById('subscriptionJson').addEventListener('input', (e) => {\r\n            this.syncFromJson();\r\n        });\r\n\r\n        // Context input change\r\n        document.getElementById('context').addEventListener('input', () => {\r\n            this.updateJsonFromForm();\r\n        });\r\n    }\r\n\r\n    updateUI() {\r\n        // Update delta timer input\r\n        if (this.deltaTimerConfig && this.deltaTimerConfig.deltaTimer) {\r\n            document.getElementById('deltaTimer').value = this.deltaTimerConfig.deltaTimer;\r\n        }\r\n\r\n        // Update subscription configuration\r\n        if (this.subscriptionConfig) {\r\n            document.getElementById('context').value = this.subscriptionConfig.context || '*';\r\n            \r\n            // Clear existing paths\r\n            document.getElementById('pathsList').innerHTML = '';\r\n            \r\n            // Add subscription paths\r\n            if (this.subscriptionConfig.subscribe && Array.isArray(this.subscriptionConfig.subscribe)) {\r\n                this.subscriptionConfig.subscribe.forEach(sub => {\r\n                    this.addPathItem(sub.path);\r\n                });\r\n            }\r\n\r\n            // Update JSON editor\r\n            document.getElementById('subscriptionJson').value = JSON.stringify(this.subscriptionConfig, null, 2);\r\n        }\r\n    }\r\n\r\n    addPathItem(path = '') {\r\n        const pathsList = document.getElementById('pathsList');\r\n        const pathItem = document.createElement('div');\r\n        pathItem.className = 'path-item';\r\n        \r\n        pathItem.innerHTML = `\r\n            <input type=\"text\" value=\"${path}\" placeholder=\"navigation.position\" class=\"path-input\">\r\n            <button type=\"button\" class=\"btn btn-danger\" onclick=\"this.parentElement.remove(); window.dataConnectorConfig.updateJsonFromForm();\">Remove</button>\r\n        `;\r\n        \r\n        // Add event listener for input changes\r\n        pathItem.querySelector('.path-input').addEventListener('input', () => {\r\n            this.updateJsonFromForm();\r\n        });\r\n        \r\n        pathsList.appendChild(pathItem);\r\n        this.updateJsonFromForm();\r\n    }\r\n\r\n    updateJsonFromForm() {\r\n        const context = document.getElementById('context').value || '*';\r\n        const pathInputs = document.querySelectorAll('.path-input');\r\n        const subscribe = Array.from(pathInputs)\r\n            .map(input => ({ path: input.value }))\r\n            .filter(sub => sub.path.trim() !== '');\r\n\r\n        const config = {\r\n            context: context,\r\n            subscribe: subscribe\r\n        };\r\n\r\n        document.getElementById('subscriptionJson').value = JSON.stringify(config, null, 2);\r\n    }\r\n\r\n    syncFromJson() {\r\n        try {\r\n            const jsonText = document.getElementById('subscriptionJson').value;\r\n            const config = JSON.parse(jsonText);\r\n            \r\n            // Update context\r\n            document.getElementById('context').value = config.context || '*';\r\n            \r\n            // Update paths\r\n            const pathsList = document.getElementById('pathsList');\r\n            pathsList.innerHTML = '';\r\n            \r\n            if (config.subscribe && Array.isArray(config.subscribe)) {\r\n                config.subscribe.forEach(sub => {\r\n                    this.addPathItem(sub.path || '');\r\n                });\r\n            }\r\n            \r\n        } catch (error) {\r\n            // Invalid JSON, don't update form\r\n            console.warn('Invalid JSON in editor:', error.message);\r\n        }\r\n    }\r\n\r\n    async saveDeltaTimer() {\r\n        const deltaTimer = parseInt(document.getElementById('deltaTimer').value);\r\n        \r\n        if (isNaN(deltaTimer) || deltaTimer < 100 || deltaTimer > 10000) {\r\n            this.showNotification('Delta timer must be between 100 and 10000 milliseconds', 'error');\r\n            return;\r\n        }\r\n\r\n        const config = { deltaTimer: deltaTimer };\r\n\r\n        try {\r\n            const response = await fetch('/plugins/signalk-data-connector/config/delta_timer.json', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(config)\r\n            });\r\n\r\n            if (response.ok) {\r\n                this.deltaTimerConfig = config;\r\n                this.showNotification('Delta timer configuration saved successfully!', 'success');\r\n                this.updateStatus();\r\n            } else {\r\n                throw new Error('Failed to save configuration');\r\n            }\r\n        } catch (error) {\r\n            this.showNotification('Error saving delta timer: ' + error.message, 'error');\r\n        }\r\n    }\r\n\r\n    async saveSubscription() {\r\n        try {\r\n            const jsonText = document.getElementById('subscriptionJson').value;\r\n            const config = JSON.parse(jsonText);\r\n\r\n            // Validate configuration\r\n            if (!config.context) {\r\n                throw new Error('Context is required');\r\n            }\r\n\r\n            if (!config.subscribe || !Array.isArray(config.subscribe)) {\r\n                throw new Error('Subscribe array is required');\r\n            }\r\n\r\n            const response = await fetch('/plugins/signalk-data-connector/config/subscription.json', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(config)\r\n            });\r\n\r\n            if (response.ok) {\r\n                this.subscriptionConfig = config;\r\n                this.showNotification('Subscription configuration saved successfully!', 'success');\r\n                this.updateStatus();\r\n            } else {\r\n                throw new Error('Failed to save configuration');\r\n            }\r\n        } catch (error) {\r\n            this.showNotification('Error saving subscription: ' + error.message, 'error');\r\n        }\r\n    }\r\n\r\n    updateStatus() {\r\n        const statusDiv = document.getElementById('status');\r\n        let statusHtml = '<h4>Configuration Status</h4>';\r\n\r\n        // Delta timer status\r\n        if (this.deltaTimerConfig) {\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Delta Timer:</strong> ${this.deltaTimerConfig.deltaTimer}ms\r\n                    <span class=\"status-indicator success\">✓ Configured</span>\r\n                </div>\r\n            `;\r\n        } else {\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Delta Timer:</strong> \r\n                    <span class=\"status-indicator warning\">⚠ Not configured</span>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        // Subscription status\r\n        if (this.subscriptionConfig && this.subscriptionConfig.subscribe) {\r\n            const pathCount = this.subscriptionConfig.subscribe.length;\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Subscriptions:</strong> ${pathCount} path(s) configured\r\n                    <span class=\"status-indicator success\">✓ Configured</span>\r\n                </div>\r\n                <div class=\"status-details\">\r\n                    <strong>Context:</strong> ${this.subscriptionConfig.context}<br>\r\n                    <strong>Paths:</strong> ${this.subscriptionConfig.subscribe.map(s => s.path).join(', ')}\r\n                </div>\r\n            `;\r\n        } else {\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Subscriptions:</strong> \r\n                    <span class=\"status-indicator warning\">⚠ Not configured</span>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        statusDiv.innerHTML = statusHtml;\r\n    }\r\n\r\n    showNotification(message, type = 'success') {\r\n        const notification = document.getElementById('notification');\r\n        notification.textContent = message;\r\n        notification.className = `notification ${type} show`;\r\n\r\n        setTimeout(() => {\r\n            notification.classList.remove('show');\r\n        }, 4000);\r\n    }\r\n}\r\n\r\n// Initialize when DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    window.dataConnectorConfig = new DataConnectorConfig();\r\n});\r\n\r\n// Export for global access\r\nexport default DataConnectorConfig;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","DataConnectorConfig","_classCallCheck","this","deltaTimerConfig","subscriptionConfig","init","_init","_callee","_context","loadConfigurations","setupEventListeners","updateUI","updateStatus","_loadConfigurations","_callee2","deltaResponse","subResponse","_t","_context2","fetch","json","showNotification","message","_this","document","getElementById","addEventListener","saveDeltaTimer","saveSubscription","addPathItem","syncFromJson","updateJsonFromForm","_this2","deltaTimer","context","innerHTML","subscribe","Array","isArray","forEach","sub","path","JSON","stringify","_this3","undefined","pathsList","pathItem","createElement","className","concat","querySelector","appendChild","pathInputs","querySelectorAll","config","from","map","input","filter","trim","_this4","jsonText","parse","error","console","warn","_saveDeltaTimer","_callee3","_t2","_context3","parseInt","isNaN","method","headers","body","ok","Error","_saveSubscription","_callee4","_t3","_context4","statusDiv","statusHtml","pathCount","s","join","type","notification","textContent","setTimeout","classList","remove","window","dataConnectorConfig"],"sourceRoot":""}