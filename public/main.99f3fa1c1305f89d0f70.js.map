{"version":3,"file":"main.99f3fa1c1305f89d0f70.js","mappings":";sQACA,IAAAA,EAAAC,EAAAC,EAAA,mBAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,aAAA,yBAAAC,EAAAN,EAAAE,EAAAE,EAAAE,GAAA,IAAAC,EAAAL,GAAAA,EAAAM,qBAAAC,EAAAP,EAAAO,EAAAC,EAAAC,OAAAC,OAAAL,EAAAC,WAAA,OAAAK,EAAAH,EAAA,mBAAAV,EAAAE,EAAAE,GAAA,IAAAE,EAAAC,EAAAG,EAAAI,EAAA,EAAAC,EAAAX,GAAA,GAAAY,GAAA,EAAAC,EAAA,CAAAF,EAAA,EAAAb,EAAA,EAAAgB,EAAApB,EAAAqB,EAAAC,EAAAN,EAAAM,EAAAC,KAAAvB,EAAA,GAAAsB,EAAA,SAAArB,EAAAC,GAAA,OAAAM,EAAAP,EAAAQ,EAAA,EAAAG,EAAAZ,EAAAmB,EAAAf,EAAAF,EAAAmB,CAAA,YAAAC,EAAApB,EAAAE,GAAA,IAAAK,EAAAP,EAAAU,EAAAR,EAAAH,EAAA,GAAAiB,GAAAF,IAAAV,GAAAL,EAAAgB,EAAAO,OAAAvB,IAAA,KAAAK,EAAAE,EAAAS,EAAAhB,GAAAqB,EAAAH,EAAAF,EAAAQ,EAAAjB,EAAA,GAAAN,EAAA,GAAAI,EAAAmB,IAAArB,KAAAQ,EAAAJ,GAAAC,EAAAD,EAAA,OAAAC,EAAA,MAAAD,EAAA,GAAAA,EAAA,GAAAR,GAAAQ,EAAA,IAAAc,KAAAhB,EAAAJ,EAAA,GAAAoB,EAAAd,EAAA,KAAAC,EAAA,EAAAU,EAAAC,EAAAhB,EAAAe,EAAAf,EAAAI,EAAA,IAAAc,EAAAG,IAAAnB,EAAAJ,EAAA,GAAAM,EAAA,GAAAJ,GAAAA,EAAAqB,KAAAjB,EAAA,GAAAN,EAAAM,EAAA,GAAAJ,EAAAe,EAAAf,EAAAqB,EAAAhB,EAAA,OAAAH,GAAAJ,EAAA,SAAAmB,EAAA,MAAAH,GAAA,EAAAd,CAAA,iBAAAE,EAAAW,EAAAQ,GAAA,GAAAT,EAAA,QAAAU,UAAA,oCAAAR,GAAA,IAAAD,GAAAK,EAAAL,EAAAQ,GAAAhB,EAAAQ,EAAAL,EAAAa,GAAAxB,EAAAQ,EAAA,EAAAT,EAAAY,KAAAM,GAAA,CAAAV,IAAAC,EAAAA,EAAA,GAAAA,EAAA,IAAAU,EAAAf,GAAA,GAAAkB,EAAAb,EAAAG,IAAAO,EAAAf,EAAAQ,EAAAO,EAAAC,EAAAR,GAAA,OAAAI,EAAA,EAAAR,EAAA,IAAAC,IAAAH,EAAA,QAAAL,EAAAO,EAAAF,GAAA,MAAAL,EAAAA,EAAA0B,KAAAnB,EAAAI,IAAA,MAAAc,UAAA,wCAAAzB,EAAA2B,KAAA,OAAA3B,EAAAW,EAAAX,EAAA4B,MAAApB,EAAA,IAAAA,EAAA,YAAAA,IAAAR,EAAAO,EAAA,SAAAP,EAAA0B,KAAAnB,GAAAC,EAAA,IAAAG,EAAAc,UAAA,oCAAApB,EAAA,YAAAG,EAAA,GAAAD,EAAAR,CAAA,UAAAC,GAAAiB,EAAAC,EAAAf,EAAA,GAAAQ,EAAAV,EAAAyB,KAAAvB,EAAAe,MAAAE,EAAA,YAAApB,GAAAO,EAAAR,EAAAS,EAAA,EAAAG,EAAAX,CAAA,SAAAe,EAAA,UAAAa,MAAA5B,EAAA2B,KAAAV,EAAA,GAAAhB,EAAAI,EAAAE,IAAA,GAAAI,CAAA,KAAAS,EAAA,YAAAV,IAAA,UAAAmB,IAAA,UAAAC,IAAA,CAAA9B,EAAAY,OAAAmB,eAAA,IAAAvB,EAAA,GAAAL,GAAAH,EAAAA,EAAA,GAAAG,QAAAW,EAAAd,EAAA,GAAAG,EAAA,yBAAAH,GAAAW,EAAAmB,EAAArB,UAAAC,EAAAD,UAAAG,OAAAC,OAAAL,GAAA,SAAAO,EAAAhB,GAAA,OAAAa,OAAAoB,eAAApB,OAAAoB,eAAAjC,EAAA+B,IAAA/B,EAAAkC,UAAAH,EAAAhB,EAAAf,EAAAM,EAAA,sBAAAN,EAAAU,UAAAG,OAAAC,OAAAF,GAAAZ,CAAA,QAAA8B,EAAApB,UAAAqB,EAAAhB,EAAAH,EAAA,cAAAmB,GAAAhB,EAAAgB,EAAA,cAAAD,GAAAA,EAAAK,YAAA,oBAAApB,EAAAgB,EAAAzB,EAAA,qBAAAS,EAAAH,GAAAG,EAAAH,EAAAN,EAAA,aAAAS,EAAAH,EAAAR,EAAA,yBAAAW,EAAAH,EAAA,oDAAAwB,EAAA,kBAAAC,EAAA7B,EAAA8B,EAAAtB,EAAA,cAAAD,EAAAf,EAAAE,EAAAE,EAAAH,GAAA,IAAAO,EAAAK,OAAA0B,eAAA,IAAA/B,EAAA,gBAAAR,GAAAQ,EAAA,EAAAO,EAAA,SAAAf,EAAAE,EAAAE,EAAAH,GAAA,SAAAK,EAAAJ,EAAAE,GAAAW,EAAAf,EAAAE,EAAA,SAAAF,GAAA,YAAAwC,QAAAtC,EAAAE,EAAAJ,EAAA,GAAAE,EAAAM,EAAAA,EAAAR,EAAAE,EAAA,CAAA2B,MAAAzB,EAAAqC,YAAAxC,EAAAyC,cAAAzC,EAAA0C,UAAA1C,IAAAD,EAAAE,GAAAE,GAAAE,EAAA,UAAAA,EAAA,WAAAA,EAAA,cAAAS,EAAAf,EAAAE,EAAAE,EAAAH,EAAA,UAAA2C,EAAAxC,EAAAH,EAAAD,EAAAE,EAAAI,EAAAe,EAAAZ,GAAA,QAAAD,EAAAJ,EAAAiB,GAAAZ,GAAAG,EAAAJ,EAAAqB,KAAA,OAAAzB,GAAA,YAAAJ,EAAAI,EAAA,CAAAI,EAAAoB,KAAA3B,EAAAW,GAAAiC,QAAAC,QAAAlC,GAAAmC,KAAA7C,EAAAI,EAAA,UAAA0C,EAAA5C,GAAA,sBAAAH,EAAA,KAAAD,EAAAiD,UAAA,WAAAJ,QAAA,SAAA3C,EAAAI,GAAA,IAAAe,EAAAjB,EAAA8C,MAAAjD,EAAAD,GAAA,SAAAmD,EAAA/C,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,OAAAhD,EAAA,UAAAgD,EAAAhD,GAAAwC,EAAAvB,EAAAnB,EAAAI,EAAA6C,EAAAC,EAAA,QAAAhD,EAAA,CAAA+C,OAAA,eAAAE,EAAArD,EAAAE,GAAA,QAAAD,EAAA,EAAAA,EAAAC,EAAAsB,OAAAvB,IAAA,KAAAK,EAAAJ,EAAAD,GAAAK,EAAAmC,WAAAnC,EAAAmC,aAAA,EAAAnC,EAAAoC,cAAA,YAAApC,IAAAA,EAAAqC,UAAA,GAAA9B,OAAA0B,eAAAvC,EAAAsD,EAAAhD,EAAAiD,KAAAjD,EAAA,WAAAgD,EAAArD,GAAA,IAAAO,EAAA,SAAAP,GAAA,aAAAuD,EAAAvD,KAAAA,EAAA,OAAAA,EAAA,IAAAD,EAAAC,EAAAE,OAAAsD,aAAA,YAAAzD,EAAA,KAAAQ,EAAAR,EAAA2B,KAAA1B,EAAAC,UAAA,aAAAsD,EAAAhD,GAAA,OAAAA,EAAA,UAAAkB,UAAA,uDAAAgC,OAAAzD,EAAA,CAAA0D,CAAA1D,GAAA,gBAAAuD,EAAAhD,GAAAA,EAAAA,EAAA,GADsB,IAEhBoD,EAAmB,WAMpB,OAPL5D,EAEI,SAAA4D,KAFJ,SAAAvC,EAAAjB,GAAA,KAAAiB,aAAAjB,GAAA,UAAAsB,UAAA,qCAEkBmC,CAAA,KAAAD,GACVE,KAAKC,iBAAmB,KACxBD,KAAKE,mBAAqB,KAC1BF,KAAKG,cAAe,EACpBH,KAAKI,MACT,EAPJhE,EAOK,EAAAqD,IAAA,OAAA1B,OAAAsC,EAAAnB,EAAAZ,IAAAE,EAED,SAAA8B,IAAA,OAAAhC,IAAAC,EAAA,SAAAgC,GAAA,cAAAA,EAAAjE,GAAA,cAAAiE,EAAAjE,EAAA,EACU0D,KAAKQ,kBAAiB,WACxBR,KAAKG,aAAc,CAAFI,EAAAjE,EAAA,QACjB0D,KAAKS,mBAAmBF,EAAAjE,EAAA,sBAAAiE,EAAAjE,EAAA,EAElB0D,KAAKU,qBAAoB,OAC/BV,KAAKW,sBACLX,KAAKY,WACLZ,KAAKa,eAAe,cAAAN,EAAAhD,EAAA,KAAA+C,EAAA,SAE3B,WAVS,OAAAD,EAAAjB,MAAC,KAADD,UAAA,KAAAM,IAAA,kBAAA1B,OAAA+C,EAAA5B,EAAAZ,IAAAE,EAYV,SAAAuC,IAAA,IAAAC,EAAA,OAAA1C,IAAAC,EAAA,SAAA0C,GAAA,cAAAA,EAAA9D,EAAA8D,EAAA3E,GAAA,cAAA2E,EAAA9D,EAAA,EAAA8D,EAAA3E,EAAA,EAG+B4E,MAAM,2DAA0D,OAAjFF,EAAQC,EAAA3D,EACd0C,KAAKG,cAAgBa,EAASG,KAA2B,MAApBH,EAASI,QAAsC,MAApBJ,EAASI,QAAgBH,EAAA3E,EAAA,eAAA2E,EAAA9D,EAAA,EAAA8D,EAAA3D,EAGzF0C,KAAKG,cAAe,EAAK,cAAAc,EAAA1D,EAAA,KAAAwD,EAAA,iBAEhC,WAToB,OAAAD,EAAA1B,MAAC,KAADD,UAAA,KAAAM,IAAA,qBAAA1B,OAAAsD,EAAAnC,EAAAZ,IAAAE,EAWrB,SAAA8C,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAnD,IAAAC,EAAA,SAAAmD,GAAA,cAAAA,EAAAvE,EAAAuE,EAAApF,GAAA,cAAAoF,EAAAvE,EAAA,EAAAuE,EAAApF,EAAA,EAGoC4E,MAAM,2DAA0D,OAAzE,OAAbK,EAAaG,EAAApE,EAAAoE,EAAApF,EAAG,EACQiF,EAAcI,OAAM,OAA7B,OAArB3B,KAAKC,iBAAgByB,EAAApE,EAAAoE,EAAApF,EAAG,EAGE4E,MAAM,4DAA2D,OAA1E,OAAXM,EAAWE,EAAApE,EAAAoE,EAAApF,EAAG,EACYkF,EAAYG,OAAM,OAAlD3B,KAAKE,mBAAkBwB,EAAApE,EAAAoE,EAAApF,EAAG,EAAH,aAAAoF,EAAAvE,EAAG,EAAHsE,EAAAC,EAAApE,EAGvB0C,KAAK4B,iBAAiB,iCAAmCH,EAAMI,QAAS,SAAS,cAAAH,EAAAnE,EAAA,KAAA+D,EAAA,iBAExF,WAbuB,OAAAD,EAAAjC,MAAC,KAADD,UAAA,KAAAM,IAAA,sBAAA1B,MAexB,WAAsB,IAAA+D,EAAA,KAElBC,SAASC,eAAe,kBAAkBC,iBAAiB,QAAS,WAChEH,EAAKI,gBACT,GAGAH,SAASC,eAAe,oBAAoBC,iBAAiB,QAAS,WAClEH,EAAKK,kBACT,GAGAJ,SAASC,eAAe,WAAWC,iBAAiB,QAAS,WACzDH,EAAKM,aACT,GAGAL,SAASC,eAAe,oBAAoBC,iBAAiB,QAAS,SAAC/F,GACnE4F,EAAKO,cACT,GAGAN,SAASC,eAAe,WAAWC,iBAAiB,QAAS,WACzDH,EAAKQ,oBACT,EACJ,GAAC,CAAA7C,IAAA,WAAA1B,MAED,WAAW,IAAAwE,EAAA,KAEHvC,KAAKC,kBAAoBD,KAAKC,iBAAiBuC,aAC/CT,SAASC,eAAe,cAAcjE,MAAQiC,KAAKC,iBAAiBuC,YAIpExC,KAAKE,qBACL6B,SAASC,eAAe,WAAWjE,MAAQiC,KAAKE,mBAAmBuC,SAAW,IAG9EV,SAASC,eAAe,aAAaU,UAAY,GAG7C1C,KAAKE,mBAAmByC,WAAaC,MAAMC,QAAQ7C,KAAKE,mBAAmByC,YAC3E3C,KAAKE,mBAAmByC,UAAUG,QAAQ,SAAAC,GACtCR,EAAKH,YAAYW,EAAIC,KACzB,GAIJjB,SAASC,eAAe,oBAAoBjE,MAAQkF,KAAKC,UAAUlD,KAAKE,mBAAoB,KAAM,GAE1G,GAAC,CAAAT,IAAA,cAAA1B,MAED,WAAuB,IAAAoF,EAAA,KAAXH,EAAI7D,UAAAzB,OAAA,QAAA0F,IAAAjE,UAAA,GAAAA,UAAA,GAAG,GACTkE,EAAYtB,SAASC,eAAe,aACpCsB,EAAWvB,SAASwB,cAAc,OACxCD,EAASE,UAAY,YAErBF,EAASZ,UAAY,2CAAHe,OACcT,EAAI,uOAKpCM,EAASI,cAAc,eAAezB,iBAAiB,QAAS,WAC5DkB,EAAKb,oBACT,GAEAe,EAAUM,YAAYL,GACtBtD,KAAKsC,oBACT,GAAC,CAAA7C,IAAA,qBAAA1B,MAED,WACI,IAAM0E,EAAUV,SAASC,eAAe,WAAWjE,OAAS,IACtD6F,EAAa7B,SAAS8B,iBAAiB,eAKvCC,EAAS,CACXrB,QAASA,EACTE,UANcC,MAAMmB,KAAKH,GACxBI,IAAI,SAAAC,GAAK,MAAK,CAAEjB,KAAMiB,EAAMlG,MAAO,GACnCmG,OAAO,SAAAnB,GAAG,MAAwB,KAApBA,EAAIC,KAAKmB,MAAa,IAOzCpC,SAASC,eAAe,oBAAoBjE,MAAQkF,KAAKC,UAAUY,EAAQ,KAAM,EACrF,GAAC,CAAArE,IAAA,eAAA1B,MAED,WAAe,IAAAqG,EAAA,KACX,IACI,IAAMC,EAAWtC,SAASC,eAAe,oBAAoBjE,MACvD+F,EAASb,KAAKqB,MAAMD,GAG1BtC,SAASC,eAAe,WAAWjE,MAAQ+F,EAAOrB,SAAW,IAG3CV,SAASC,eAAe,aAChCU,UAAY,GAElBoB,EAAOnB,WAAaC,MAAMC,QAAQiB,EAAOnB,YACzCmB,EAAOnB,UAAUG,QAAQ,SAAAC,GACrBqB,EAAKhC,YAAYW,EAAIC,MAAQ,GACjC,EAGR,CAAE,MAAOuB,GAELC,QAAQC,KAAK,0BAA2BF,EAAM1C,QAClD,CACJ,GAAC,CAAApC,IAAA,iBAAA1B,OAAA2G,EAAAxF,EAAAZ,IAAAE,EAED,SAAAmG,IAAA,IAAAnC,EAAAsB,EAAAc,EAAA,OAAAtG,IAAAC,EAAA,SAAAsG,GAAA,cAAAA,EAAA1H,EAAA0H,EAAAvI,GAAA,OAC4E,GAAlEkG,EAAasC,SAAS/C,SAASC,eAAe,cAAcjE,SAE9DgH,MAAMvC,IAAeA,EAAa,KAAOA,EAAa,KAAK,CAAAqC,EAAAvI,EAAA,QAC8B,OAAzF0D,KAAK4B,iBAAiB,yDAA0D,SAASiD,EAAAtH,EAAA,UAIpD,OAAnCuG,EAAS,CAAEtB,WAAYA,GAAYqC,EAAA1H,EAAA,EAAA0H,EAAAvI,EAAA,EAGd4E,MAAM,0DAA2D,CACpF8D,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMjC,KAAKC,UAAUY,KACvB,OANY,IAAAe,EAAAvH,EAQD6D,GAAI,CAAF0D,EAAAvI,EAAA,QACX0D,KAAKC,iBAAmB6D,EACxB9D,KAAK4B,iBAAiB,gDAAiD,WACvE5B,KAAKa,eAAegE,EAAAvI,EAAA,qBAEd,IAAI6I,MAAM,gCAA+B,OAAAN,EAAAvI,EAAA,eAAAuI,EAAA1H,EAAA,EAAAyH,EAAAC,EAAAvH,EAGnD0C,KAAK4B,iBAAiB,6BAA+BgD,EAAM/C,QAAS,SAAS,cAAAgD,EAAAtH,EAAA,KAAAoH,EAAA,iBAEpF,WA7BmB,OAAAD,EAAAtF,MAAC,KAADD,UAAA,KAAAM,IAAA,mBAAA1B,OAAAqH,EAAAlG,EAAAZ,IAAAE,EA+BpB,SAAA6G,IAAA,IAAAhB,EAAAP,EAAAwB,EAAA,OAAAhH,IAAAC,EAAA,SAAAgH,GAAA,cAAAA,EAAApI,EAAAoI,EAAAjJ,GAAA,OAKQ,GALRiJ,EAAApI,EAAA,EAEckH,EAAWtC,SAASC,eAAe,oBAAoBjE,OACvD+F,EAASb,KAAKqB,MAAMD,IAGd5B,QAAS,CAAF8C,EAAAjJ,EAAA,cACT,IAAI6I,MAAM,uBAAsB,UAGrCrB,EAAOnB,WAAcC,MAAMC,QAAQiB,EAAOnB,WAAU,CAAA4C,EAAAjJ,EAAA,cAC/C,IAAI6I,MAAM,+BAA8B,cAAAI,EAAAjJ,EAAA,EAG3B4E,MAAM,2DAA4D,CACrF8D,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMjC,KAAKC,UAAUY,KACvB,OANY,IAAAyB,EAAAjI,EAQD6D,GAAI,CAAFoE,EAAAjJ,EAAA,QACX0D,KAAKE,mBAAqB4D,EAC1B9D,KAAK4B,iBAAiB,iDAAkD,WACxE5B,KAAKa,eAAe0E,EAAAjJ,EAAA,qBAEd,IAAI6I,MAAM,gCAA+B,OAAAI,EAAAjJ,EAAA,eAAAiJ,EAAApI,EAAA,EAAAmI,EAAAC,EAAAjI,EAGnD0C,KAAK4B,iBAAiB,8BAAgC0D,EAAMzD,QAAS,SAAS,cAAA0D,EAAAhI,EAAA,KAAA8H,EAAA,iBAErF,WAhCqB,OAAAD,EAAAhG,MAAC,KAADD,UAAA,KAAAM,IAAA,eAAA1B,MAkCtB,WACI,IAAMyH,EAAYzD,SAASC,eAAe,UACtCyD,EAAa,gCAoBjB,GAjBIzF,KAAKC,iBACLwF,GAAc,kGAAJhC,OAE8BzD,KAAKC,iBAAiBuC,WAAU,4HAKxEiD,GAAc,4NASdzF,KAAKE,oBAAsBF,KAAKE,mBAAmByC,UAAW,CAC9D,IAAM+C,EAAY1F,KAAKE,mBAAmByC,UAAUjF,OACpD+H,GAAc,oGAAJhC,OAEgCiC,EAAS,6NAAAjC,OAIfzD,KAAKE,mBAAmBuC,QAAO,sDAAAgB,OACjCzD,KAAKE,mBAAmByC,UAAUqB,IAAI,SAAA2B,GAAC,OAAIA,EAAE3C,IAAI,GAAE4C,KAAK,MAAK,yCAGnG,MACIH,GAAc,8NAQlBD,EAAU9C,UAAY+C,CAC1B,GAAC,CAAAhG,IAAA,mBAAA1B,MAED,WACsBgE,SAAS2B,cAAc,cAC/BhB,UAAY,4lGAsD1B,GAAC,CAAAjD,IAAA,mBAAA1B,MAED,SAAiB8D,GAA2B,IAAlBgE,EAAI1G,UAAAzB,OAAA,QAAA0F,IAAAjE,UAAA,GAAAA,UAAA,GAAG,UACvB2G,EAAe/D,SAASC,eAAe,gBAC7C8D,EAAaC,YAAclE,EAC3BiE,EAAatC,UAAY,gBAAHC,OAAmBoC,EAAI,SAE7CG,WAAW,WACPF,EAAaG,UAAUC,OAAO,OAClC,EAAG,IACP,IA9UJ9J,GAAAmD,EAAArD,EAAAU,UAAAR,GAAAW,OAAA0B,eAAAvC,EAAA,aAAA2C,UAAA,IAAA3C,EAAA,IAAAA,EAAAE,EA6JwBgJ,EAFnBV,EAtIoBrD,EAZXP,EAFTT,CAuUA,CA7UoB,GAiVzB0B,SAASE,iBAAiB,mBAAoB,WAC1CkE,OAAOC,oBAAsB,IAAItG,CACrC,E","sources":["webpack://signalk-data-connector/./src/webapp/index.js"],"sourcesContent":["import './styles.css';\r\n\r\nclass DataConnectorConfig {\r\n    constructor() {\r\n        this.deltaTimerConfig = null;\r\n        this.subscriptionConfig = null;\r\n        this.isServerMode = false;\r\n        this.init();\r\n    }\r\n\r\n    async init() {\r\n        await this.checkServerMode();\r\n        if (this.isServerMode) {\r\n            this.showServerModeUI();\r\n        } else {\r\n            await this.loadConfigurations();\r\n            this.setupEventListeners();\r\n            this.updateUI();\r\n            this.updateStatus();\r\n        }\r\n    }\r\n\r\n    async checkServerMode() {\r\n        try {\r\n            // Try to access the configuration API\r\n            const response = await fetch('/plugins/signalk-data-connector/config/delta_timer.json');\r\n            this.isServerMode = !response.ok && (response.status === 404 || response.status === 405);\r\n        } catch (error) {\r\n            // If fetch fails completely, assume server mode\r\n            this.isServerMode = true;\r\n        }\r\n    }\r\n\r\n    async loadConfigurations() {\r\n        try {\r\n            // Load delta timer configuration\r\n            const deltaResponse = await fetch('/plugins/signalk-data-connector/config/delta_timer.json');\r\n            this.deltaTimerConfig = await deltaResponse.json();\r\n\r\n            // Load subscription configuration\r\n            const subResponse = await fetch('/plugins/signalk-data-connector/config/subscription.json');\r\n            this.subscriptionConfig = await subResponse.json();\r\n\r\n        } catch (error) {\r\n            this.showNotification('Error loading configurations: ' + error.message, 'error');\r\n        }\r\n    }\r\n\r\n    setupEventListeners() {\r\n        // Delta timer save button\r\n        document.getElementById('saveDeltaTimer').addEventListener('click', () => {\r\n            this.saveDeltaTimer();\r\n        });\r\n\r\n        // Subscription save button\r\n        document.getElementById('saveSubscription').addEventListener('click', () => {\r\n            this.saveSubscription();\r\n        });\r\n\r\n        // Add path button\r\n        document.getElementById('addPath').addEventListener('click', () => {\r\n            this.addPathItem();\r\n        });\r\n\r\n        // JSON editor sync\r\n        document.getElementById('subscriptionJson').addEventListener('input', (e) => {\r\n            this.syncFromJson();\r\n        });\r\n\r\n        // Context input change\r\n        document.getElementById('context').addEventListener('input', () => {\r\n            this.updateJsonFromForm();\r\n        });\r\n    }\r\n\r\n    updateUI() {\r\n        // Update delta timer input\r\n        if (this.deltaTimerConfig && this.deltaTimerConfig.deltaTimer) {\r\n            document.getElementById('deltaTimer').value = this.deltaTimerConfig.deltaTimer;\r\n        }\r\n\r\n        // Update subscription configuration\r\n        if (this.subscriptionConfig) {\r\n            document.getElementById('context').value = this.subscriptionConfig.context || '*';\r\n            \r\n            // Clear existing paths\r\n            document.getElementById('pathsList').innerHTML = '';\r\n            \r\n            // Add subscription paths\r\n            if (this.subscriptionConfig.subscribe && Array.isArray(this.subscriptionConfig.subscribe)) {\r\n                this.subscriptionConfig.subscribe.forEach(sub => {\r\n                    this.addPathItem(sub.path);\r\n                });\r\n            }\r\n\r\n            // Update JSON editor\r\n            document.getElementById('subscriptionJson').value = JSON.stringify(this.subscriptionConfig, null, 2);\r\n        }\r\n    }\r\n\r\n    addPathItem(path = '') {\r\n        const pathsList = document.getElementById('pathsList');\r\n        const pathItem = document.createElement('div');\r\n        pathItem.className = 'path-item';\r\n        \r\n        pathItem.innerHTML = `\r\n            <input type=\"text\" value=\"${path}\" placeholder=\"navigation.position\" class=\"path-input\">\r\n            <button type=\"button\" class=\"btn btn-danger\" onclick=\"this.parentElement.remove(); window.dataConnectorConfig.updateJsonFromForm();\">Remove</button>\r\n        `;\r\n        \r\n        // Add event listener for input changes\r\n        pathItem.querySelector('.path-input').addEventListener('input', () => {\r\n            this.updateJsonFromForm();\r\n        });\r\n        \r\n        pathsList.appendChild(pathItem);\r\n        this.updateJsonFromForm();\r\n    }\r\n\r\n    updateJsonFromForm() {\r\n        const context = document.getElementById('context').value || '*';\r\n        const pathInputs = document.querySelectorAll('.path-input');\r\n        const subscribe = Array.from(pathInputs)\r\n            .map(input => ({ path: input.value }))\r\n            .filter(sub => sub.path.trim() !== '');\r\n\r\n        const config = {\r\n            context: context,\r\n            subscribe: subscribe\r\n        };\r\n\r\n        document.getElementById('subscriptionJson').value = JSON.stringify(config, null, 2);\r\n    }\r\n\r\n    syncFromJson() {\r\n        try {\r\n            const jsonText = document.getElementById('subscriptionJson').value;\r\n            const config = JSON.parse(jsonText);\r\n            \r\n            // Update context\r\n            document.getElementById('context').value = config.context || '*';\r\n            \r\n            // Update paths\r\n            const pathsList = document.getElementById('pathsList');\r\n            pathsList.innerHTML = '';\r\n            \r\n            if (config.subscribe && Array.isArray(config.subscribe)) {\r\n                config.subscribe.forEach(sub => {\r\n                    this.addPathItem(sub.path || '');\r\n                });\r\n            }\r\n            \r\n        } catch (error) {\r\n            // Invalid JSON, don't update form\r\n            console.warn('Invalid JSON in editor:', error.message);\r\n        }\r\n    }\r\n\r\n    async saveDeltaTimer() {\r\n        const deltaTimer = parseInt(document.getElementById('deltaTimer').value);\r\n        \r\n        if (isNaN(deltaTimer) || deltaTimer < 100 || deltaTimer > 10000) {\r\n            this.showNotification('Delta timer must be between 100 and 10000 milliseconds', 'error');\r\n            return;\r\n        }\r\n\r\n        const config = { deltaTimer: deltaTimer };\r\n\r\n        try {\r\n            const response = await fetch('/plugins/signalk-data-connector/config/delta_timer.json', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(config)\r\n            });\r\n\r\n            if (response.ok) {\r\n                this.deltaTimerConfig = config;\r\n                this.showNotification('Delta timer configuration saved successfully!', 'success');\r\n                this.updateStatus();\r\n            } else {\r\n                throw new Error('Failed to save configuration');\r\n            }\r\n        } catch (error) {\r\n            this.showNotification('Error saving delta timer: ' + error.message, 'error');\r\n        }\r\n    }\r\n\r\n    async saveSubscription() {\r\n        try {\r\n            const jsonText = document.getElementById('subscriptionJson').value;\r\n            const config = JSON.parse(jsonText);\r\n\r\n            // Validate configuration\r\n            if (!config.context) {\r\n                throw new Error('Context is required');\r\n            }\r\n\r\n            if (!config.subscribe || !Array.isArray(config.subscribe)) {\r\n                throw new Error('Subscribe array is required');\r\n            }\r\n\r\n            const response = await fetch('/plugins/signalk-data-connector/config/subscription.json', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(config)\r\n            });\r\n\r\n            if (response.ok) {\r\n                this.subscriptionConfig = config;\r\n                this.showNotification('Subscription configuration saved successfully!', 'success');\r\n                this.updateStatus();\r\n            } else {\r\n                throw new Error('Failed to save configuration');\r\n            }\r\n        } catch (error) {\r\n            this.showNotification('Error saving subscription: ' + error.message, 'error');\r\n        }\r\n    }\r\n\r\n    updateStatus() {\r\n        const statusDiv = document.getElementById('status');\r\n        let statusHtml = '<h4>Configuration Status</h4>';\r\n\r\n        // Delta timer status\r\n        if (this.deltaTimerConfig) {\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Delta Timer:</strong> ${this.deltaTimerConfig.deltaTimer}ms\r\n                    <span class=\"status-indicator success\">✓ Configured</span>\r\n                </div>\r\n            `;\r\n        } else {\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Delta Timer:</strong> \r\n                    <span class=\"status-indicator warning\">⚠ Not configured</span>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        // Subscription status\r\n        if (this.subscriptionConfig && this.subscriptionConfig.subscribe) {\r\n            const pathCount = this.subscriptionConfig.subscribe.length;\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Subscriptions:</strong> ${pathCount} path(s) configured\r\n                    <span class=\"status-indicator success\">✓ Configured</span>\r\n                </div>\r\n                <div class=\"status-details\">\r\n                    <strong>Context:</strong> ${this.subscriptionConfig.context}<br>\r\n                    <strong>Paths:</strong> ${this.subscriptionConfig.subscribe.map(s => s.path).join(', ')}\r\n                </div>\r\n            `;\r\n        } else {\r\n            statusHtml += `\r\n                <div class=\"status-item\">\r\n                    <strong>Subscriptions:</strong> \r\n                    <span class=\"status-indicator warning\">⚠ Not configured</span>\r\n                </div>\r\n            `;\r\n        }\r\n\r\n        statusDiv.innerHTML = statusHtml;\r\n    }\r\n\r\n    showServerModeUI() {\r\n        const container = document.querySelector('.container');\r\n        container.innerHTML = `\r\n            <div class=\"config-section\">\r\n                <div class=\"card server-mode-card\">\r\n                    <div class=\"card-header\">\r\n                        <h2>🖥️ Server Mode Active</h2>\r\n                        <p>This plugin is running in Server Mode</p>\r\n                    </div>\r\n                    <div class=\"card-content\">\r\n                        <div class=\"server-mode-info\">\r\n                            <h3>Server Mode Information</h3>\r\n                            <p>This SignalK Data Connector instance is configured to <strong>receive encrypted data</strong> from client devices.</p>\r\n                            \r\n                            <div class=\"info-grid\">\r\n                                <div class=\"info-item\">\r\n                                    <h4>🔧 Configuration</h4>\r\n                                    <p>Server mode configuration is managed through the SignalK server plugin settings. No additional webapp configuration is required.</p>\r\n                                </div>\r\n                                \r\n                                <div class=\"info-item\">\r\n                                    <h4>📡 Network</h4>\r\n                                    <p>The server is listening for encrypted UDP data transmissions from client devices on the configured port.</p>\r\n                                </div>\r\n                                \r\n                                <div class=\"info-item\">\r\n                                    <h4>🔐 Security</h4>\r\n                                    <p>All incoming data is automatically decrypted using the configured secret key and integrated into the SignalK data stream.</p>\r\n                                </div>\r\n                                \r\n                                <div class=\"info-item\">\r\n                                    <h4>📊 Data Flow</h4>\r\n                                    <p><strong>Client Devices → Server (This Instance) → SignalK Data Stream</strong></p>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"server-status\">\r\n                                <h4>Current Status</h4>\r\n                                <div class=\"status-indicator success\">✓ Server is active and listening for client connections</div>\r\n                            </div>\r\n\r\n                            <div class=\"configuration-note\">\r\n                                <h4>💡 Need to Configure?</h4>\r\n                                <p>To modify server settings (UDP port, encryption key, etc.), use the SignalK server's plugin configuration interface:</p>\r\n                                <ol>\r\n                                    <li>Go to SignalK Admin Panel</li>\r\n                                    <li>Navigate to Plugin Config</li>\r\n                                    <li>Find \"Signal K Data Connector\"</li>\r\n                                    <li>Adjust settings as needed</li>\r\n                                </ol>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    showNotification(message, type = 'success') {\r\n        const notification = document.getElementById('notification');\r\n        notification.textContent = message;\r\n        notification.className = `notification ${type} show`;\r\n\r\n        setTimeout(() => {\r\n            notification.classList.remove('show');\r\n        }, 4000);\r\n    }\r\n}\r\n\r\n// Initialize when DOM is loaded\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    window.dataConnectorConfig = new DataConnectorConfig();\r\n});\r\n\r\n// Export for global access\r\nexport default DataConnectorConfig;"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_defineProperties","_toPropertyKey","key","_typeof","toPrimitive","String","_toPrimitive","DataConnectorConfig","_classCallCheck","this","deltaTimerConfig","subscriptionConfig","isServerMode","init","_init","_callee","_context","checkServerMode","showServerModeUI","loadConfigurations","setupEventListeners","updateUI","updateStatus","_checkServerMode","_callee2","response","_context2","fetch","ok","status","_loadConfigurations","_callee3","deltaResponse","subResponse","_t2","_context3","json","showNotification","message","_this","document","getElementById","addEventListener","saveDeltaTimer","saveSubscription","addPathItem","syncFromJson","updateJsonFromForm","_this2","deltaTimer","context","innerHTML","subscribe","Array","isArray","forEach","sub","path","JSON","stringify","_this3","undefined","pathsList","pathItem","createElement","className","concat","querySelector","appendChild","pathInputs","querySelectorAll","config","from","map","input","filter","trim","_this4","jsonText","parse","error","console","warn","_saveDeltaTimer","_callee4","_t3","_context4","parseInt","isNaN","method","headers","body","Error","_saveSubscription","_callee5","_t4","_context5","statusDiv","statusHtml","pathCount","s","join","type","notification","textContent","setTimeout","classList","remove","window","dataConnectorConfig"],"sourceRoot":""}